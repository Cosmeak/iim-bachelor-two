// Generated by CoffeeScript 1.12.7
var ParsedError, fn, i, len, prop, ref, sysPath;

sysPath = require('path');

module.exports = ParsedError = (function() {
  function ParsedError(error) {
    this.error = error;
    this._parse();
  }

  ParsedError.prototype._parse = function() {
    var m;
    this._trace = [];
    this._kind = 'Error';
    this._wrapper = '';
    if (this.error.wrapper != null) {
      this._wrapper = String(this.error.wrapper);
    }
    if (typeof this.error !== 'object') {
      this._message = String(this.error);
    } else {
      this._stack = this.error.stack;
      if (this.error.kind != null) {
        this._kind = String(this.error.kind);
      } else if (typeof this._stack === 'string') {
        if (m = this._stack.match(/^([a-zA-Z0-9\_\$]+):\ /)) {
          this._kind = m[1];
        }
      }
      this._message = (this.error.message != null) && String(this.error.message) || '';
      if (typeof this._stack === 'string') {
        this._parseStack();
      }
    }
  };

  ParsedError.prototype._parseStack = function() {
    var i, len, line, message, messageLines, reachedTrace, ref;
    messageLines = [];
    reachedTrace